library(dslabs)
library(dplyr)
murders %>% group_by(region)
murders <- mutate(murders , rate = total /population * 10^5)
str(mutate)
str(mutate)
str(murders)
murders %>% group_by(region) %>% summarize(median = median(rate))
gc()
library(NHANES)
data(NHANES)
install.packages(NHANES)
install.packages("NHANES")
install.packages("NHANES")
library(NHANES)
data(NHANES)
library(dplyr)
library(NHANES)
data("NHANES")
class(tab)
# filter females age between 20-29 and assign the data to tab
tab <- NHANES %>% filter(AgeDecade == ' 20-29' & Gender == 'female')
class(tab)
library(dslabs)
data(heights)
options(digits = 3)    # report 3 significant digits for all answers
heights
str(heights)
class(heights)
plot(heights(sex))
plot(heights$sex)
head(heights)
head(heights , 10)
top_n(10 , heights$height)
order(heights$height)
heights %>% sort(height)
heights %>% sort(height(.))
heights %>% sort(heights(height))
heights %>% sort(heights$height)
heights %>% sort(heights)
heights %>% sort(height)
heights %>% order(height)
heights %>% order(heights$height)
heights[order(height)]
heights[order(height),]
heights
heights[order(heights$height),]
head(heights[order(heights$height),])
head(heights[order(heights$height),] ,10)
# order by head
head(heights[order(heights$height),desc = TRUE] ,10)
# order by head
head(heights[order(heights$height),decreasing = TRUE] ,10)
# order by head
head(heights[order(heights$height , decreasing = TRUE),] ,10)
average_height <- mean(heights$height)
filter(heights , height > average_height)
count(filter(heights , height > average_height))
count(filter(heights , height > average_height & sex == 'Female' ))
#what proportion are females
count(filter(ex == 'Females'))
#what proportion are females
count(filter(sex == 'Females'))
#what proportion are females
height %>% count(filter(sex == 'Females'))
#what proportion are females
heights %>% count(filter(sex == 'Females'))
#what proportion are females
count(height , filter(sex == 'Females'))
#what proportion are females
count(heights , filter(sex == 'Females'))
#what proportion are females
count(heights , filter(sex == 'Female'))
#what proportion are females
count(filter(heights , filter(sex == 'Female')))
#what proportion are females
count(filter(heights , sex == 'Female'))
#what proportion are females
heights %>% count(filter(sex == 'Female'))
#what proportion are females
count(filter(heights , sex == 'Female'))
count(filter(heights , sex == 'Male'))
count(heights)
#what proportion are females
total_females <- count(filter(heights , sex == 'Female'))
total_males <- count(filter(heights , sex == 'Male'))
total_all <- count(heights)
proportion_of_females <- (total_females / total_all) * 100
proportion_of_females
options(digits = 3)    # report 3 significant digits for all answers
proportion_of_females
proportion_of_females <- (total_females / total_all)
proportion_of_females
#minimum height in heights dataset
min(heights)
#minimum height in heights dataset
min(heights$height)
# use match() to find the index of the first individual with min height
match(heights$height , 50)
# use match() to find the index of the first individual with min height
heights[match(heights$height , 50)]
# use match() to find the index of the first individual with min height
heights$height[match(heights$height , 50)]
# use match() to find the index of the first individual with min height
heights$height[match(50 , heights$height)]
# use match() to find the index of the first individual with min height
match(50 , heights$height)
# subset that individual
heights %>% select(sex)
# subset that individual
heights %>% select(sex) %>% heights[[match(50 , heights$height)]]
# subset that individual
heights %>% select(sex) %>% heights[1032]
# subset that individual
heights[1032]
# use match() to find the index of the first individual with min height
match(50 , heights$height)
# subset that individual
heights[[1032]
# use match() to find the index of the first individual with min height
match(50 , heights$height)
# use match() to find the index of the first individual with min height
match(50 , heights$height)
# subset that individual
heights[[1032,]
# use match() to find the index of the first individual with min height
match(50 , heights$height)
# subset that individual
heights[1032,]
# max height
max(heights$height)
min_height <- min(heights$height)
max_height
# max/min height
max_height <- max(heights$height)
min_height <- min(heights$height)
max_height
min_height
x <- 83 : 50
x
x <- 50 : 83
x
subset(heights, !(x %in% heights$height))
sum(subset(heights, !(x %in% heights$height)))
subset(heights, !(x %in% heights$height))
subset(heights, !(x %in% heights$height))['height']
sum(subset(heights, !(x %in% heights$height))['height'])
count(subset(heights, !(x %in% heights$height))['height'])
sum(subset(heights, !(x %in% heights$height))['height'])
count(subset(heights, !(x %in% heights$height)))
sum(!(x %in% heights$height)))
sum(!(x %in% heights$height))
count(!(x %in% heights$height))
!(x %in% heights$height)
sum(!(x %in% heights$height))
# includes the integers between min and max height
x <- 50:82
x
sum(!(x %in% heights$height))
head(heights)
?heights
heights2 <- mutate(heights , ht_cm = height * 2.54)
head(heights2)
heights2[18,]
mean(heights2$ht_cm)
# create a dataframe females from height2 by filtering only females
females <- filter(heights2 , sex == 'Female' )
females
ste(females)
str(females)
mean(females$ht_cm)
library(dslabs)
data(olive)
head(olive)
plot(palmitic , palmitoleic)
plot(palmitic , palmitoleic)
plot(olive$palmitic , olive$palmitoleic)
hist(olive$eicosenoic)
boxplot(palmitic ~ region, data = olive)
1:5
library(dplyr)
library(ggplot2)
library(dslabs)
data(heights)
p <- ggplot(data = murders)
p
class(p)
?murders
murders %>% ggplot(aes(x = population, y = total)) + geom_point()
qplot(murders$population , murders$total)
qplot(murders$population , murders$total)
murders %>% ggplot(aes(population, total)) + geom_label()
murders %>% ggplot(aes(population, total , label = abb)) + geom_label()
murders %>% ggplot(aes(population, total , label = abb , color = region)) + geom_label()
# now the labels are colored according to the region they are in
murders %>% ggplot(aes(population, total , label = abb , color = region)) + geom_label() +  ggtitle("Gun murder data")
# load the dataset
library(dslabs)
data(heights)
# make a table of category proportions
prop.table(table(heights$sex))
prop.table(table(heights$sex))
prop.table(table(murders$total))
prop.table(table(murders$region))
barplot(prop.table(table(murders$region)))
?pnorm
seq(1,10 , 2)
library(dslabs)
data(heights)
summary(heights$height)
p <- seq(0.01, 0.99, 0.01)
percentiles <- quantile(heights$height, p)
percentiles
p <- seq(0.01, 0.99, 0.01)
theoretical_quantiles <- qnorm(p, 69, 3)
theoretical_quantiles
# define x and z
library(tidyverse)
library(dslabs)
data(heights)
index <- heights$sex=="Male"
index
x <- heights$height[index]
x
z <- scale(x)
z
# proportion of data below 69.5
mean(x <= 69.5)
# calculate observed and theoretical quantiles
p <- seq(0.05, 0.95, 0.05)
# calculate observed and theoretical quantiles
p <- seq(0.05, 0.95, 0.05)
observed_quantiles <- quantile(x, p)
theoretical_quantiles <- qnorm(p, mean = mean(x), sd = sd(x))
# make QQ-plot
plot(theoretical_quantiles, observed_quantiles)
abline(0,1)
# make QQ-plot with scaled values
observed_quantiles <- quantile(z, p)
theoretical_quantiles <- qnorm(p)
plot(theoretical_quantiles, observed_quantiles)
abline(0,1)
index
x
?scale
?mean
# proportion of data below 69.5
mean(x <= 69.5)
# proportion of data below 69.5
x <= 69.5
p
observed_quantiles
theoretical_quantiles
abline
?abline
mean(x <= 69.5)
library(dslabs)
data(heights)
quantile(heights$height, seq(.01, 0.99, 0.01))
