?mean
# proportion of data below 69.5
mean(x <= 69.5)
# proportion of data below 69.5
x <= 69.5
p
observed_quantiles
theoretical_quantiles
abline
?abline
mean(x <= 69.5)
library(dslabs)
data(heights)
quantile(heights$height, seq(.01, 0.99, 0.01))
getRversion()
version
library(HistData)
data(Galton)
x <- Galton$child
mean(x)
median(x)
n <- 50
bdays <- sample(1:365, n, replace = TRUE)
bdays
bdays <- sample(1:365, n, replace = TRUE)
bdays
sample(1:50 , 5)
sample(1:50 , 5)
sample(1:50 , 5)
sample(1:50 , 5)
set.seed(11)
sample(1:50 , 5)
sample(1:50 , 5)
sample(1:50 , 5)
set.seed(11)
sample(1:50 , 5)
set.seed(11)
sample(1:50 , 5)
sample(1:5 , 5)
sample(1:5 , 5)
sample(1:5 , 5)
sample(1:5 , 5 , replace = TRUE)
sample(1:5 , 5 , replace = TRUE)
sample(1:5 , 5 , replace = TRUE)
sample(1:5 , 5)
sample(1:5 , 6)
bdays
duplicated(c(1,2,3,1,4,3,5))
any(duplicated(c(1,2,3,1,4,3,5)))
all(duplicated(c(1,2,3,1,4,3,5)))
any(duplicated(c(1,2,3,1,4,3,5)))
any(duplicated(c(1,2,3,5,4,7,6)))
any(duplicated(bdays))
bdays <- sample(1:365, n, replace = TRUE)
bdays
any(duplicated(bdays))
bdays[duplicated(bdays)]
n <- 50
bdays <- sample(1:365, n, replace = TRUE)
bdays
bdays[duplicated(bdays)]
bdays <- sample(1:365, n, replace = TRUE)
bdays
bdays[duplicated(bdays)]
B <- 10000
same_birthday <- function(n){
bdays <- sample(1:365, n, replace=TRUE)
any(duplicated(bdays))
}
results <- replicate(B, same_birthday(50))
mean(results)
results
t <- c(TRUE , FALSE , TRUE , TRUE)
t
mean(t)
install.packages("shiny")
install.packages("rgeolocate")
install.packages("zoo")
install.packages("quantmod")
install.packages("tidyquant")
shinyApp(ui = ui, server = server)
library(dslabs)
library(tidyverse)
data(co2)
head(co2)
co2_wide <- data.frame(matrix(co2, ncol = 12, byrow = TRUE)) %>%
setNames(1:12) %>%
mutate(year = as.character(1959:1997))
head(co2_wide)
co2_tidy <- pivot_longer(co2_wide, -year, names_to = "month", values_to = "co2")
co2_tidy
co2_tidy %>% ggplot(aes(as.numeric(month), co2, color = year)) + geom_line()
library(dslabs)
data(admissions)
dat <- admissions %>% select(-applicants)
head(dat)
str(dat)
dim(dat)
level(dat)
levels(dat)
levels(dat$gender)
nrow(dat)
ncol(dat)
summary(dat)
head(dat)
tail(dat)
dat_tidy <- pivot_wider(dat, names_from = gender, values_from = admitted)
head(dat_tidy)
tmp <- gather(admissions, key, value, admitted:applicants)
tmp
head(tmp)
tmp2 <- unite(tmp, column_name, c(key, gender))
head(tmp2)
library(Lahman)
library(tidyverse)
library(dslabs)
ds_theme_set()
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(HR_per_game = HR / G, R_per_game = R / G) %>%
ggplot(aes(R_per_game, AB_per_game)) +
geom_point(alpha = 0.5)
Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(AB_per_game = AB / G, R_per_game = R / G) %>%
ggplot(aes(R_per_game, AB_per_game)) +
geom_point(alpha = 0.5)
# win rate (number of wins per game) versus number of fielding errors (E) per game.
head(Teams)
library(Lahman)
data("Teams")
head(Teams)
Teams %>% filter(yearID %in% 1961:2001) %>% cor(R / G , AB)
Teams %>% filter(yearID %in% 1961:2001) %>% cor((R / G) , AB)
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor((R / G) , AB))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor((R / G) , (AB / G))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor((R / G) , (AB / G))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor((R / G) , (AB / G)))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise( R/ G , ER / G)
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor( R/ G , ER / G))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor( (R/ G) , (ER / G))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor( (R/ G) , (ER / G))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor( (R/ G) , (ER / G)))
head(Teams)
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor((R/ G) , (E / G)))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor((W/ G) , (E / G)))
Teams %>% filter(yearID %in% 1961:2001) %>% summarise(cor(X2B / G , X3B / G))
library(Lahman)
top <- Batting %>%
filter(yearID == 2016) %>%
arrange(desc(HR)) %>%    # arrange by descending HR count
slice(1:10)    # take entries 1-10
top %>% as_tibble()
Master %>% as_tibble()
Master
Salaries
top %>% as_tibble()
top %>% as_tibble()
Salaries
top %>% as_tibble()
top_salary
top_salary <- Salaries %>% filter(yearID==2016) %>%
right_join(top_names) %>%
select(nameFirst, nameLast, teamID, HR, salary)
top_salary
top_salary <- Salaries %>% filter(yearID==2016) %>%
right_join(top_names) %>%
select(nameFirst, nameLast, teamID, HR, salary)
top <- Batting %>%
filter(yearID == 2016) %>%
arrange(desc(HR)) %>%    # arrange by descending HR count
slice(1:10)    # take entries 1-10
top %>% as_tibble()
top_names <- top %>% left_join(Master) %>%
select(playerID, nameFirst, nameLast, HR)
top_names
top_names <- top %>% left_join(Master) %>%
select(playerID, nameFirst, nameLast, HR)
top_salary
top_salary <- Salaries %>% filter(yearID==2016) %>%
right_join(top_names) %>%
select(nameFirst, nameLast, teamID, HR, salary)
top_salary
Master <- select(People, c(playerID, nameFirst, nameLast))
top_names <- top %>% left_join(Master) %>%
select(playerID, nameFirst, nameLast, HR)
top_names
Salaries
top_salary <- Salaries %>% filter(yearID==2016) %>%
right_join(top_names) %>%
select(nameFirst, nameLast, teamID, HR, salary)
top_salary
# import a webpage into R
library(rvest)
url <- "https://en.wikipedia.org/wiki/Murder_in_the_United_States_by_state"
h <- read_html(url)
class(h)
h
tab <- h %>% html_nodes("table")
tab <- tab[[2]]
tab <- tab %>% html_table
class(tab)
tab <- tab %>% setNames(c("state", "population", "total", "murders", "gun_murders", "gun_ownership", "total_rate", "murder_rate", "gun_murder_rate"))
head(tab)
# import a webpage into R
library(rvest)
url <- "https://en.wikipedia.org/wiki/Murder_in_the_United_States_by_state"
h <- read_html(url)
class(h)
h
tab <- h %>% html_nodes("table")
tab
tab <- tab[[2]]
tab
tab <- tab %>% html_table
class(tab)
tab
tab <- tab %>% setNames(c("state", "population", "total", "murders", "gun_murders", "gun_ownership", "total_rate", "murder_rate", "gun_murder_rate"))
head(tab)
library(rvest)
url <- "https://web.archive.org/web/20181024132313/http://www.stevetheump.com/Payrolls.htm"
h <- read_html(url)
nodes <- html_nodes(h, "table")
nodes
html_text(nodes[[8]])
html_table(nodes[[8]])
html_table(nodes[[1]])
html_table(nodes[1)
html_table(nodes[1])
html_table(nodes[[1]])
sapply(nodes[1:4], html_table)
html_table(nodes[[2]])
html_table(nodes[[3]])
html_table(nodes[[4]])
tab_1 <- html_table(nodes[[10]])
tab_2 <- html_table(nodes[[19]])
col_names <- c("Team", "Payroll", "Average")
tab_1 <- tab_1[-1, -1]
tab_2 <- tab_2[-1,]
names(tab_2) <- col_names
names(tab_1) <- col_names
full_join(tab_1,tab_2, by = "Team")
nrow(full_join(tab_1,tab_2, by = "Team"))
library(rvest)
library(tidyverse)
url <- "https://en.wikipedia.org/w/index.php?title=Opinion_polling_for_the_United_Kingdom_European_Union_membership_referendum&oldid=896735054"
tab <- html_nodes(h , "table")
tab
nrow(tab)
length(tab)
tab <- read_html(url) %>% html_nodes("table")
tab
length(tab)
h <- read_html(url)
tab <- html_nodes(h , "table")
length(tab)
html_table([[1]])
html_table(tab[[1]])
?html_table
html_table(tab[[2]])
html_table(tab[[3]])
html_table(tab[[4]])
html_table(tab[[5]])
tab[[5]] %>% html_table(fill = TRUE) %>% names()
tab[[4]] %>% html_table(fill = TRUE) %>% names()
tab[[2]] %>% html_table(fill = TRUE) %>% names()
tab[[2]] %>% html_table(fill = TRUE) %>% names()
tab[[3]] %>% html_table(fill = TRUE) %>% names()
tab[[1]] %>% html_table(fill = TRUE) %>% names()
install.packages("report")
# read in raw murders data from Wikipedia
url <- "https://en.wikipedia.org/w/index.php?title=Gun_violence_in_the_United_States_by_state&direction=prev&oldid=810166167"
murders_raw <- read_html(url) %>%
html_nodes("table") %>%
html_table() %>%
.[[1]] %>%
setNames(c("state", "population", "total", "murder_rate"))
# inspect data and column classes
head(murders_raw)
murders_raw <- read_html(url) %>%
html_nodes("table") %>%
html_table() %>%
.[[1]] %>%
setNames(c("state", "population", "total", "murder_rate"))
library(tidyverse)
# read in raw murders data from Wikipedia
url <- "https://en.wikipedia.org/w/index.php?title=Gun_violence_in_the_United_States_by_state&direction=prev&oldid=810166167"
murders_raw <- read_html(url) %>%
html_nodes("table") %>%
html_table() %>%
.[[1]] %>%
setNames(c("state", "population", "total", "murder_rate"))
# inspect data and column classes
head(murders_raw)
murders_raw <- read_html(url) %>%
html_nodes("table") %>%
html_table() %>%
.[[1]] %>%
setNames(c("state", "population", "total", "murder_rate"))
library(rvest)
# read in raw murders data from Wikipedia
url <- "https://en.wikipedia.org/w/index.php?title=Gun_violence_in_the_United_States_by_state&direction=prev&oldid=810166167"
murders_raw <- read_html(url) %>%
html_nodes("table") %>%
html_table() %>%
.[[1]] %>%
setNames(c("state", "population", "total", "murder_rate"))
# inspect data and column classes
head(murders_raw)
class(murders_raw$population)
class(murders_raw$total)
# compute RSS for any pair of beta0 and beta1 in Galton's data
library(HistData)
data("GaltonFamilies")
set.seed(1983)
# fit regression line to predict son's height from father's height
fit <- lm(son ~ father, data = galton_heights)
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
rss <- function(beta0, beta1){
resid <- galton_heights$son - (beta0+beta1*galton_heights$father)
return(sum(resid^2))
}
# plot RSS as a function of beta1 when beta0=25
beta1 = seq(0, 1, len=nrow(galton_heights))
results <- data.frame(beta1 = beta1,
rss = sapply(beta1, rss, beta0 = 25))
results %>% ggplot(aes(beta1, rss)) + geom_line() +
geom_line(aes(beta1, rss))
# fit regression line to predict son's height from father's height
fit <- lm(son ~ father, data = galton_heights)
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
library(tidyverse)
data("GaltonFamilies")
set.seed(1983)
galton_heights <- GaltonFamilies %>%
filter(gender == "male") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(father, childHeight) %>%
rename(son = childHeight)
rss <- function(beta0, beta1){
resid <- galton_heights$son - (beta0+beta1*galton_heights$father)
return(sum(resid^2))
}
# plot RSS as a function of beta1 when beta0=25
beta1 = seq(0, 1, len=nrow(galton_heights))
results <- data.frame(beta1 = beta1,
rss = sapply(beta1, rss, beta0 = 25))
results %>% ggplot(aes(beta1, rss)) + geom_line() +
geom_line(aes(beta1, rss))
# fit regression line to predict son's height from father's height
fit <- lm(son ~ father, data = galton_heights)
fit
# summary statistics
summary(fit)
# plot RSS as a function of beta1 when beta0=25
beta1 = seq(0, 1, len=nrow(galton_heights))
results <- data.frame(beta1 = beta1,
rss = sapply(beta1, rss, beta0 = 36))
results %>% ggplot(aes(beta1, rss)) + geom_line() +
geom_line(aes(beta1, rss))
results
library(Lahman)
fit <- Teams %>% filter(yearID %in% 1961:2001) %>%
mutate(R_per_game = R / G, BB_per_game = BB / G, HR_per_game = HR / G) %>%
lm(R_per_game ~ BB_per_game + HR_per_game, data = .)
summary(fit)
set.seed(1989) #if you are using R 3.5 or earlier
# set.seed(1989, sample.kind="Rounding") #if you are using R 3.6 or later
library(HistData)
data("GaltonFamilies")
options(digits = 3)    # report 3 significant digits
female_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(mother, childHeight) %>%
rename(daughter = childHeight)
female_heights
class(female_heights)
str(female_heights)
type(female_heights)
length(female_heights)
names(female_heights)
columns(female_heights)
column(female_heights)
ncol(female_heights)
nrow(female_heights)
info(female_heights)
summary(female_heights)
is.na(female_heights$daughter)
mean(is.na(female_heights$daughter))
sum(is.na(female_heights$mother))
# Fit a linear regression model predicting the mothers' heights using daughters' heights.
model <- lm(mother ~ daughter, data = female_heights)
model
set.seed(1989) #if you are using R 3.5 or earlier
# set.seed(1989) #if you are using R 3.5 or earlier
set.seed(1989, sample.kind="Rounding") #if you are using R 3.6 or later
library(HistData)
data("GaltonFamilies")
options(digits = 3)    # report 3 significant digits
female_heights <- GaltonFamilies %>%
filter(gender == "female") %>%
group_by(family) %>%
sample_n(1) %>%
ungroup() %>%
select(mother, childHeight) %>%
rename(daughter = childHeight)
# Fit a linear regression model predicting the mothers' heights using daughters' heights.
model <- lm(mother ~ daughter, data = female_heights)
model
# Fit a linear regression model predicting the mothers' heights using daughters' heights.
fit <- lm(mother ~ daughter, data = female_heights)
fit
fit$coefficients
fit$coefficients[2]
fit
fit$coefficients[2]
predict(fit)[1]
# What is the actual height of the first mother in the dataset?
female_heights$mother[1]
library(Lahman)
bat_02 <- Batting %>% filter(yearID == 2002) %>%
mutate(pa = AB + BB, singles = (H - X2B - X3B - HR)/pa, bb = BB/pa) %>%
filter(pa >= 100) %>%
select(playerID, singles, bb)
bat_99_01 <- Batting %>% filter(yearID %in% 1999:2001) %>%
mutate(pa = AB + BB, singles = (H - X2B - X3B - HR)/pa, bb = BB/pa) %>%
filter(pa >= 100) %>%
group_by(playerID) %>%
summarize(mean_singles = mean(singles), mean_bb = mean(bb))
sum(bat_99_01$mean_singles > 0.2)
# How many players had a single rate mean_singles of greater than 0.2 per plate appearance over 1999-2001?
sum(bat_99_01$mean_singles > 0.2)
# How many players had a BB rate mean_bb of greater than 0.2 per plate appearance over 1999-2001?
sum(bat_99_01$mean_bb > 0.2)
cor(dat$singles, dat$mean_singles)
dat <- inner_join(bat_02, bat_99_01)
cor(dat$singles, dat$mean_singles)
dat
head(dat)
cor(dat$bb, dat$mean_bb)
# What is the correlation between 2002 BB rates and 1999-2001 average BB rates?
cor(dat$bb, dat$mean_bb)
dat %>%
ggplot(aes(singles, mean_singles)) +
geom_point()
dat %>%
ggplot(aes(bb, mean_bb)) +
geom_point()
fit <- lm(dat$singles ~ dat$mean_singles)
summary(fit)
fit
# What is the coefficient of mean_singles, the slope of the fit?
fit
# Fit a linear model to predict 2002 bb given 1999-2001 mean_bb.
# What is the coefficient of mean_bb, the slope of the fit?
fit <- lm(dat$bb ~ dat$mean_bb)
fit
library(tidyverse)
library(HistData)
data("GaltonFamilies")
# set.seed(1) # if you are using R 3.5 or earlier
set.seed(1, sample.kind = "Rounding") # if you are using R 3.6 or later
galton <- GaltonFamilies %>%
group_by(family, gender) %>%
sample_n(1) %>%
ungroup() %>%
gather(parent, parentHeight, father:mother) %>%
mutate(child = ifelse(gender == "female", "daughter", "son")) %>%
unite(pair, c("parent", "child"))
galton
galton %>% filter(pair = 'father_daughter') %>% n()
galton %>% filter(pair = 'father_daughter') %>% nrow()
galton %>% filter(pair == 'father_daughter') %>% nrow()
galton %>% filter(pair == 'mother_son') %>% nrow()
galton %>%
group_by(pair) %>%
summarize(n = n())
galton %>%
group_by(pair) %>%
summarize(cor = cor(parentHeight, childHeight)) %>%
filter(cor == max(cor))
galton %>%
group_by(pair) %>%
summarize(cor = cor(parentHeight, childHeight)) %>%
galton %>%
group_by(pair) %>%
summarize(cor = cor(parentHeight, childHeight))
galton %>%
group_by(pair) %>%
summarize(cor = cor(parentHeight, childHeight))
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE))
library(broom)
galton %>%
group_by(pair) %>%
do(tidy(lm(childHeight ~ parentHeight, data = .), conf.int = TRUE))
